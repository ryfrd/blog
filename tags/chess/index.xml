<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chess on dymc.win</title>
    <link>https://dymc.win/tags/chess/</link>
    <description>Recent content in chess on dymc.win</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 08 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dymc.win/tags/chess/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>chess.com api and the continuing search for en passant checkmate</title>
      <link>https://dymc.win/posts/chess.com-api-and-the-continuing-search-for-en-passant-checkmate/</link>
      <pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dymc.win/posts/chess.com-api-and-the-continuing-search-for-en-passant-checkmate/</guid>
      <description>Last time we worked out how to get info for all the games played by titled players in a particular month. Today, we have three objectives:
Parse this info for the pgn (portable game notation) of each game. Write these to a file so we dont have to spend forever downloading them everytime we run the script. Devise a way to convert this pgn to a more convenient pythonic format so we can analyse it later.</description>
    </item>
    
    <item>
      <title>chess.com api and the search for en passant checkmate</title>
      <link>https://dymc.win/posts/chess.com-api-and-the-search-for-en-passant-checkmate/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dymc.win/posts/chess.com-api-and-the-search-for-en-passant-checkmate/</guid>
      <description>The chess.com API gives you access to a crazy amount of data on games played on the site. Armed with the knowledge that this data was at my fingertips, I set out to do what any sane person would do: find en passant checkmates. For those not in the know, en passant check mate is kind of the king of moves in chess meme circles. So some sort of python script that identified en passant check mates that occured on the site would be of great value to me.</description>
    </item>
    
  </channel>
</rss>
